@page "/all_files"
@using B1TestTask.Data
@using B1TestTask.Components
@inject ExcelFilesService excelFilesService

<PageTitle>Список всех файлов</PageTitle>

<h1>Список всех файлов</h1>

@if (IsLoading)
{
    <CustomLoadingSpinner/>
}

@if (Error is not null)
{
    IsLoading = false;
    <CustomError ErrorMessage="@this.Error"/>
}

@if (ExcelFiles is not null)
{
    <p role="status">Количество документов: @ExcelFiles.Length.ToString()</p>

    <table class="excel_files_table">
        <thead>
        <tr>
            <th>Имя файла</th>
            <th>Расширение</th>
            <th>Полное имя файла</th>
            <th>Дата добавления</th>
            <th>Успешно обработано</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var excelFile in ExcelFiles)
        {
            <tr class="clickable-row" title="Просмотреть @excelFile.Name">
                    <td>
                        <a href="/file/@excelFile.Id.ToString()">
                            @excelFile.Name
                        </a>
                    </td>
                        <td>
                            <a href="/file/@excelFile.Id.ToString()">
                                @excelFile.Extension
                            </a>
                        </td>
                        <td>
                            <a href="/file/@excelFile.Id.ToString()">
                                @excelFile.FullName
                            </a>
                        </td>
                        <td>
                            <a href="/file/@excelFile.Id.ToString()">
                                @excelFile.AddedDate.ToString()
                            </a>
                        </td>
                        @if (excelFile.ExcelFileReportDetails?.IsValidReport is true)
                        {
                            <td>✅</td>
                        }
                        else
                        {
                            <td>❌</td>
                        }
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <text>Пока что нет файлов в базе данных</text>
    <a href="/upload_excel_file">Загрузите файл</a>
}


@code {
    public ExcelFile[] ExcelFiles { get; set; }
    public bool IsLoading { get; set; } = true;
    public string? Error { get; set; }

    void GetExcelFiles()
    {
        try
        {
            var excelFiles = this.excelFilesService.GetExcelFiles();
            this.ExcelFiles = excelFiles.Length > 0 ? excelFiles : null;
        }
        catch (Exception e)
        {
            Error = e.Message;
        }
        finally
        {
            this.IsLoading = false;
        }
    }

    protected override async Task OnInitializedAsync()
    {
        await Task.Run(GetExcelFiles);
    }
}
